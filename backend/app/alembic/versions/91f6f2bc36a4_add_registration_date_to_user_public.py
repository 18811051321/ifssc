"""Add registration_date to user_public

Revision ID: 91f6f2bc36a4
Revises: 4951a24acf4c
Create Date: 2024-10-30 21:14:14.300480

"""
from alembic import op
from sqlalchemy.dialects.postgresql import ENUM
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '91f6f2bc36a4'
down_revision = '4951a24acf4c'
branch_labels = None
depends_on = None

gender_enum = ENUM('male', 'female', 'others', name='gender')

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    gender_enum.create(op.get_bind())
    op.drop_table('carousel_poster')
    op.drop_column('user_business', 'registration_date')
    op.alter_column('user_public', 'gender',
                        type_=gender_enum,
                        existing_type=sa.String(),  # Change to the existing type
                        existing_nullable=True,
                        postgresql_using='gender::gender')  # If you need to convert existing data

    op.drop_column('user_public', 'registration_date')
    op.drop_column('venue', 'h3_index')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('venue', sa.Column('h3_index', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('user_public', sa.Column('registration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('user_public', 'gender')
    gender_enum.drop(op.get_bind())
    op.add_column('user_business', sa.Column('registration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.create_table('carousel_poster',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('deep_link', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('nightclub_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('foodcourt_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('qsr_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('restaurant_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('h3_index', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='carousel_poster_event_id_fkey'),
    sa.ForeignKeyConstraint(['foodcourt_id'], ['foodcourt.id'], name='carousel_poster_foodcourt_id_fkey'),
    sa.ForeignKeyConstraint(['nightclub_id'], ['nightclub.id'], name='carousel_poster_nightclub_id_fkey'),
    sa.ForeignKeyConstraint(['qsr_id'], ['qsr.id'], name='carousel_poster_qsr_id_fkey'),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], name='carousel_poster_restaurant_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='carousel_poster_pkey')
    )
    # ### end Alembic commands ###
